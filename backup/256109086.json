{"name":"Build a Spotify clone with React and ts-audio","created_at":"2023-02-01T21:17:58.813Z","published_at":"2023-02-27T15:12:22.481Z","id":256109086,"uuid":"45583850-d68c-4b71-ba5f-60666f5262c7","content":{"_uid":"10f63c2a-de47-4718-a8b2-abd4df8f8ced","body":{"type":"doc","content":[{"type":"paragraph","content":[{"text":"This post first appeared on Logrocket. Check it out ","type":"text","marks":[{"type":"bold"}]},{"text":"here","type":"text","marks":[{"type":"link","attrs":{"href":"https://blog.logrocket.com/build-spotify-clone-react-ts-audio/","uuid":null,"anchor":null,"custom":{},"target":"_blank","linktype":"url"}},{"type":"bold"}]},{"text":".","type":"text","marks":[{"type":"bold"}]}]},{"type":"paragraph","content":[{"text":"Instead, we’ll work with dummy data consisting of songs and image art. However, if you venture across an API with a streamable link, you can also apply the methods used in this article. You can find the complete code","type":"text"},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"for this tutorial at the GitHub repo","type":"text","marks":[{"type":"link","attrs":{"href":"https://github.com/iamfortune/Spotify-clone-with-Ts-audio","uuid":null,"anchor":null,"custom":{},"target":null,"linktype":null}}]},{"text":". Let’s get started!","type":"text"}]},{"type":"bullet_list","content":[{"type":"list_item","content":[{"type":"paragraph","content":[{"text":"What is ts-audio?","type":"text","marks":[{"type":"link","attrs":{"href":"https://blog.logrocket.com/build-spotify-clone-react-ts-audio/#what-ts-audio","uuid":null,"anchor":null,"custom":{},"target":null,"linktype":null}}]}]}]},{"type":"list_item","content":[{"type":"paragraph","content":[{"text":"Building a Spotify clone with ts-audio","type":"text","marks":[{"type":"link","attrs":{"href":"https://blog.logrocket.com/build-spotify-clone-react-ts-audio/#building-spotify-clone-with-tsaudio","uuid":null,"anchor":null,"custom":{},"target":null,"linktype":null}}]}]},{"type":"bullet_list","content":[{"type":"list_item","content":[{"type":"paragraph","content":[{"text":"Using the","type":"text","marks":[{"type":"link","attrs":{"href":"https://blog.logrocket.com/build-spotify-clone-react-ts-audio/#using-audio-component","uuid":null,"anchor":null,"custom":{},"target":null,"linktype":null}}]},{"text":" ","type":"text","marks":[{"type":"link","attrs":{"href":"https://blog.logrocket.com/build-spotify-clone-react-ts-audio/#using-audio-component","uuid":null,"anchor":null,"custom":{},"target":null,"linktype":null}},{"type":"styled","attrs":{"class":""}}]},{"text":"Audio","type":"text","marks":[{"type":"code"}]},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"component","type":"text"}]}]},{"type":"list_item","content":[{"type":"paragraph","content":[{"text":"Using the","type":"text","marks":[{"type":"link","attrs":{"href":"https://blog.logrocket.com/build-spotify-clone-react-ts-audio/#using-audio-playlist-component","uuid":null,"anchor":null,"custom":{},"target":null,"linktype":null}}]},{"text":" ","type":"text","marks":[{"type":"link","attrs":{"href":"https://blog.logrocket.com/build-spotify-clone-react-ts-audio/#using-audio-playlist-component","uuid":null,"anchor":null,"custom":{},"target":null,"linktype":null}},{"type":"styled","attrs":{"class":""}}]},{"text":"AudioPlaylist","type":"text","marks":[{"type":"code"}]},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"component","type":"text"}]}]},{"type":"list_item","content":[{"type":"paragraph","content":[{"text":"Creating the functionalities","type":"text","marks":[{"type":"link","attrs":{"href":"https://blog.logrocket.com/build-spotify-clone-react-ts-audio/#creating-functionalities","uuid":null,"anchor":null,"custom":{},"target":null,"linktype":null}}]}]}]}]}]},{"type":"list_item","content":[{"type":"paragraph","content":[{"text":"Problem solving: Mismatched song details","type":"text","marks":[{"type":"link","attrs":{"href":"https://blog.logrocket.com/build-spotify-clone-react-ts-audio/#problem-solving","uuid":null,"anchor":null,"custom":{},"target":null,"linktype":null}}]}]}]},{"type":"list_item","content":[{"type":"paragraph","content":[{"text":"Adding styling","type":"text","marks":[{"type":"link","attrs":{"href":"https://blog.logrocket.com/build-spotify-clone-react-ts-audio/#adding-styling","uuid":null,"anchor":null,"custom":{},"target":null,"linktype":null}}]}]}]}]},{"type":"heading","attrs":{"level":2},"content":[{"text":"What is ts-audio?","type":"text","marks":[{"type":"bold"}]}]},{"type":"paragraph","content":[{"text":"ts-audio is an agnostic library that makes the","type":"text"},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"AudioContext","type":"text","marks":[{"type":"code"}]},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"API","type":"text"},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"easier to interact with. ts-audio provides you with methods like play, pause, and more, and it allows you to create playlists. ts-audio offers the following features:","type":"text"}]},{"type":"bullet_list","content":[{"type":"list_item","content":[{"type":"paragraph","content":[{"text":"Includes a simple API that abstracts the complexity of the","type":"text"},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"AudioContext","type":"text","marks":[{"type":"code"}]},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"API","type":"text"}]}]},{"type":"list_item","content":[{"type":"paragraph","content":[{"text":"Offers cross-browser support","type":"text"}]}]},{"type":"list_item","content":[{"type":"paragraph","content":[{"text":"Makes it easy to create an audio playlist","type":"text"}]}]},{"type":"list_item","content":[{"type":"paragraph","content":[{"text":"Works with any language that compiles into JavaScript","type":"text"}]}]}]},{"type":"heading","attrs":{"level":2},"content":[{"text":"Building a Spotify clone with ts-audio","type":"text","marks":[{"type":"bold"}]}]},{"type":"paragraph","content":[{"text":"Let’s start by creating a new React app with the command below:","type":"text"}]},{"type":"code_block","attrs":{"class":null},"content":[{"text":"npx create-react-app ts-audio","type":"text"}]},{"type":"paragraph","content":[{"text":"If you’re using Yarn, run the command below:","type":"text"}]},{"type":"code_block","attrs":{"class":null},"content":[{"text":"yarn create react-app ts-audio","type":"text"}]},{"type":"paragraph","content":[{"text":"For the rest of the tutorial, I’ll use Yarn. Next, we install the ts-audio package as follows:","type":"text"}]},{"type":"code_block","attrs":{"class":null},"content":[{"text":"yarn add ts-audio","type":"text"}]},{"type":"paragraph","content":[{"text":"At its core, ts-audio has two components,","type":"text"},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"Audio","type":"text","marks":[{"type":"code"}]},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"and","type":"text"},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"AudioPlaylist","type":"text","marks":[{"type":"code"}]},{"text":". The components are functions that we can call with specific parameters.","type":"text"}]},{"type":"heading","attrs":{"level":3},"content":[{"text":"Using the","type":"text","marks":[{"type":"bold"}]},{"text":" ","type":"text","marks":[{"type":"bold"},{"type":"styled","attrs":{"class":""}}]},{"text":"Audio","type":"text","marks":[{"type":"code"}]},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"component","type":"text"}]},{"type":"paragraph","content":[{"text":"The","type":"text"},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"Audio","type":"text","marks":[{"type":"code"}]},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"component allows us to pass in a single song to be played. It also provides us with certain methods like","type":"text"},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"play()","type":"text","marks":[{"type":"code"}]},{"text":",","type":"text"},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"pause()","type":"text","marks":[{"type":"code"}]},{"text":",","type":"text"},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"stop()","type":"text","marks":[{"type":"code"}]},{"text":", and more:","type":"text"}]},{"type":"code_block","attrs":{"class":null},"content":[{"text":"// App.js\n\nimport Audio from 'ts-audio';\nimport Lazarus from './music/Lazarus.mp3';\n\nexport default function App() {\n  const audio = Audio({\n    file: Lazarus\n  })\n\n  const play = () => {\n    audio.play()\n  }\n\n    const pause = () => {\n    audio.pause()\n  }\n\n    const stop = () => {\n    audio.stop()\n  }\n\n  return (\n    <>\n      <button onClick={play}>Play</button>\n      <button onClick={pause}>Pause</button>\n      <button onClick={stop}>Stop</button>\n    </>\n  )\n}","type":"text"}]},{"type":"paragraph","content":[{"text":"In the code block above, we imported the","type":"text"},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"Audio","type":"text","marks":[{"type":"code"}]},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"component from ts-audio and the song we want to play. We created an audio instance, set it to the imported","type":"text"},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"Audio","type":"text","marks":[{"type":"code"}]},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"component, and then passed the imported music to the file parameter exposed by the","type":"text"},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"Audio","type":"text","marks":[{"type":"code"}]},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"element.","type":"text"}]},{"type":"paragraph","content":[{"text":"We took advantage of the methods provided to us by ts-audio, like","type":"text"},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"play()","type":"text","marks":[{"type":"code"}]},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"and","type":"text"},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"pause()","type":"text","marks":[{"type":"code"}]},{"text":", then passed them through functions to the buttons.","type":"text"}]},{"type":"heading","attrs":{"level":3},"content":[{"text":"Using the","type":"text","marks":[{"type":"bold"}]},{"text":" ","type":"text","marks":[{"type":"bold"},{"type":"styled","attrs":{"class":""}}]},{"text":"AudioPlaylist","type":"text","marks":[{"type":"code"}]},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"component","type":"text"}]},{"type":"paragraph","content":[{"text":"The","type":"text"},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"AudioPlaylist","type":"text","marks":[{"type":"code"}]},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"component allows us to pass in multiple songs, but they have to be in an array, otherwise ts-audio won’t play them. The","type":"text"},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"AudioPlaylist","type":"text","marks":[{"type":"code"}]},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"component provides us with methods like","type":"text"},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"play()","type":"text","marks":[{"type":"code"}]},{"text":",","type":"text"},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"pause()","type":"text","marks":[{"type":"code"}]},{"text":",","type":"text"},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"stop()","type":"text","marks":[{"type":"code"}]},{"text":",","type":"text"},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"next()","type":"text","marks":[{"type":"code"}]},{"text":", and","type":"text"},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"prev()","type":"text","marks":[{"type":"code"}]},{"text":".","type":"text"}]},{"type":"paragraph","content":[{"text":"The code block below is an example of how to use the","type":"text"},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"AudioPlaylist","type":"text","marks":[{"type":"code"}]},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"component:","type":"text"}]},{"type":"code_block","attrs":{"class":null},"content":[{"text":"// App.js\n\nimport { AudioPlaylist } from 'ts-audio';\nimport Lazarus from './music/Lazarus.mp3';\nimport Sia from './music/Sia - Bird Set Free.mp3';\n\nexport default function App() {\n  const playlist = AudioPlaylist({\n    files: [Lazarus, Sia]\n  })\n\n  const play = () => {\n    playlist.play()\n  }\n\n  const pause = () => {\n    playlist.pause()\n  }\n\n  const next = () => {\n    playlist.next()\n  }\n\n  const previous = () => {\n    playlist.prev()\n  }\n\n  const stop = () => {\n    playlist.stop()\n  }\n\n  return (\n    <>\n      <button onClick={play}>Play</button>\n      <button onClick={pause}>Pause</button>\n      <button onClick={next}>Next</button>\n      <button onClick={prev}>Prev</button>\n      <button onClick={stop}>Stop</button>\n    </>\n  )\n}","type":"text"}]},{"type":"paragraph","content":[{"text":"The music player will have the following functionalities:","type":"text"}]},{"type":"bullet_list","content":[{"type":"list_item","content":[{"type":"paragraph","content":[{"text":"Change the artist to the current song’s artist whenever we click on either","type":"text"},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"next","type":"text","marks":[{"type":"bold"}]},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"or","type":"text"},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"previous","type":"text","marks":[{"type":"bold"}]}]}]},{"type":"list_item","content":[{"type":"paragraph","content":[{"text":"Change the image to the current song’s image","type":"text"}]}]},{"type":"list_item","content":[{"type":"paragraph","content":[{"text":"Change the song title to the current song","type":"text"}]}]}]},{"type":"paragraph","content":[{"text":"In the","type":"text"},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"src","type":"text","marks":[{"type":"code"}]},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"folder, create two folders called","type":"text"},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"images","type":"text","marks":[{"type":"code"}]},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"and","type":"text"},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"music","type":"text","marks":[{"type":"code"}]},{"text":", respectively. Navigate to the","type":"text"},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"images","type":"text","marks":[{"type":"code"}]},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"folder and paste any photos you might need. In the","type":"text"},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"music","type":"text","marks":[{"type":"code"}]},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"folder, you can paste any audio files that you want to use.","type":"text"}]},{"type":"paragraph","content":[{"text":"In the following GitHub repos, you can get the","type":"text"},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"image files used in this tutorial","type":"text","marks":[{"type":"link","attrs":{"href":"https://github.com/iamfortune/Spotify-clone-with-Ts-audio/tree/main/src/images","uuid":null,"anchor":null,"custom":{},"target":null,"linktype":null}}]},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"and","type":"text"},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"obtain the audio files","type":"text","marks":[{"type":"link","attrs":{"href":"https://github.com/iamfortune/Spotify-clone-with-Ts-audio/tree/main/src/images","uuid":null,"anchor":null,"custom":{},"target":null,"linktype":null}}]},{"text":". Next, import songs and images into","type":"text"},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"App.js","type":"text","marks":[{"type":"code"}]},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"as follows:","type":"text"}]},{"type":"code_block","attrs":{"class":null},"content":[{"text":"import { AudioPlaylist } from 'ts-audio';\n\n// Music import\nimport Eyes from './music/01. Jon Bellion - Eyes To The Sky.mp3';\nimport Mood from './music/24kGoldn-Mood-Official-Audio-ft.-Iann-Dior.mp3';\nimport Audio from './music/audio.mp3';\nimport Broken from './music/Cant Be Broken .mp3';\nimport Lazarus from './music/Lazarus.mp3';\nimport Sia from './music/Sia - Bird Set Free.mp3';\nimport Nobody from './music/T-Classic-Nobody-Fine-Pass-You.mp3';\nimport Yosemite from './music/Yosemite.mp3';\n\n// Pictures import\nimport EyesImg from './images/Eyes to the sky.jpeg';\nimport MoodImg from './images/mood.jpeg';\nimport AudioImg from './images/lana.jpeg';\nimport BrokenImg from './images/lil wayne.jpeg';\nimport LazarusImg from './images/dave.jpeg';\nimport SiaImg from './images/sia.jpeg';\nimport NobodyImg from './images/nobody.jpeg';\nimport YosemiteImg from './images/travis.jpeg';\n\nexport default function App() {\n  const songs =  [\n      {\n        title: 'Eyes to the sky',\n        artist: 'Jon Bellion',\n        img_src: EyesImg,\n        src: Eyes,\n      },\n      {\n        title: 'Lazarus',\n        artist: 'Dave',\n        img_src: LazarusImg,\n        src: Lazarus,\n      },\n      {\n        title: 'Yosemite',\n        artist: 'Travis scott',\n        img_src: YosemiteImg,\n        src: Yosemite,\n      },\n      {\n        title: 'Bird set free',\n        artist: 'Sia',\n        img_src: SiaImg,\n        src: Sia,\n      },\n      {\n        title: 'Cant be broken',\n        artist: 'Lil wayne',\n        img_src: BrokenImg,\n        src: Broken,\n      },\n      {\n        title: 'Mood',\n        artist: '24kGoldn',\n        img_src: MoodImg,\n        src: Mood,\n      },\n      {\n        title: 'Nobody fine pass you',\n        artist: 'T-Classic',\n        img_src: NobodyImg,\n        src: Nobody,\n      },\n      {\n        title: 'Dark paradise',\n        artist: 'Lana Del Ray',\n        img_src: AudioImg,\n        src: Audio,\n      },\n    ]\n\n  const playlist = AudioPlaylist({\n      files: songs.map((song) => song.src),\n    });\n\n  const handlePlay = () => {\n    playlist.play();\n  };\n\n  const handlePause = () => {\n    playlist.pause();\n  };\n\n  const handleSkip = () => {\n    playlist.next();\n  };\n\n  const handlePrevious = () => {\n    playlist.prev();\n  };\n\n  return (\n    <>\n      <button onClick={handlePlay}>Play</button>\n      <button onClick={handlePause}>Pause</button>\n      <button onClick={handleSkip}>Next</button>\n      <button onClick={handlePrevious}>Prev</button>     \n    </>\n  );\n}","type":"text"}]},{"type":"paragraph","content":[{"text":"In the code block above, we imported the songs and images. Next, we created a song array containing objects. Each object has a","type":"text"},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"title","type":"text","marks":[{"type":"code"}]},{"text":",","type":"text"},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"artist","type":"text","marks":[{"type":"code"}]},{"text":",","type":"text"},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"img_src","type":"text","marks":[{"type":"code"}]},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"for the imported images, and","type":"text"},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"src","type":"text","marks":[{"type":"code"}]},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"for the imported songs.","type":"text"}]},{"type":"paragraph","content":[{"text":"After that, we mapped through the song array to get to the song’s","type":"text"},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"src","type":"text","marks":[{"type":"code"}]},{"text":", which we passed into the files parameter. Remember, we have to pass it in as an array, but then the","type":"text"},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"map()","type":"text","marks":[{"type":"code"}]},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"method creates a new array from calling a function. Therefore, we can pass it to the","type":"text"},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"files","type":"text","marks":[{"type":"code"}]},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"parameter.","type":"text"}]},{"type":"paragraph","content":[{"text":"We also created our methods and passed them to the various buttons. We’ll create a","type":"text"},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"Player.js","type":"text","marks":[{"type":"code"}]},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"file to handle the buttons while we take care of the functionality in","type":"text"},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"App.js","type":"text","marks":[{"type":"code"}]},{"text":":","type":"text"}]},{"type":"code_block","attrs":{"class":null},"content":[{"text":"// Player.js\n\nexport default function Player({ play, pause, next, prev }) {\n  return (\n    <div className=\"c-player--controls\">\n      <button onClick={play}>Play</button>\n      <button onClick={pause}>Pause</button>\n      <button onClick={next}>Next</button>\n      <button onClick={prev}>Previous</button> \n    </div>\n  );\n}","type":"text"}]},{"type":"paragraph","content":[{"text":"In the code block above, we created a","type":"text"},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"Player.js","type":"text","marks":[{"type":"code"}]},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"file, then caught the props coming from","type":"text"},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"App.js","type":"text","marks":[{"type":"code"}]},{"text":", and finally passed them into the buttons.","type":"text"}]},{"type":"heading","attrs":{"level":3},"content":[{"text":"Creating the functionalities","type":"text","marks":[{"type":"bold"}]}]},{"type":"paragraph","content":[{"text":"To create the functionalities for our application, we import","type":"text"},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"useState","type":"text","marks":[{"type":"code"}]},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"to get the current index of the song. We then set the image to the current photo, the artist to the current artist, and the title to the current title:","type":"text"}]},{"type":"code_block","attrs":{"class":null},"content":[{"text":"// App.js\n\nimport React, { useState } from 'react';\nimport Player from './Player';\nimport { AudioPlaylist } from 'ts-audio';\n// Music import\n\n// Pictures import\n\nexport default function App() {\n  const [currentSong, setCurrentSong] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n\n\n  // Songs Array\n\n  const playlist =AudioPlaylist({\n      files: songs.map((song) => song.src),\n    });\n\n  const handlePlay = () => {\n    playlist.play();\n    setIsPlaying(true);\n  };\n\n  const handlePause = () => {\n    playlist.pause();\n    setIsPlaying(false);\n  };\n\n  const handleSkip = () => {\n    playlist.next();\n    setIsPlaying(true);\n    setCurrentSong(\n      (currentSong) => (currentSong + 1 + songs.length) % songs.length\n    );\n  };\n\n  const handlePrevious = () => {\n    playlist.prev();\n    setIsPlaying(true);\n    setCurrentSong(\n      (currentSong) => (currentSong - 1 + songs.length) % songs.length\n    );\n  };\n  return (\n    <>\n      <div className=\"App\">\n        <div className=\"c-player\">\n          <div className=\"c-player--details\">\n            {' '}\n            <div className=\"details-img\">\n              {' '}\n              <img src={songs[currentSong].img_src} alt=\"img\" />\n            </div>\n            <h1 className=\"details-title\">{songs[currentSong].title}</h1>\n            <h2 className=\"details-artist\">{songs[currentSong].artist}</h2>\n          </div>\n          <Player\n            play={handlePlay}\n            pause={handlePause}\n            isPlaying={isPlaying}\n            setIsPlaying={setIsPlaying}\n            next={handleSkip}\n            prev={handlePrevious}\n          />\n        </div>\n      </div>\n    </>\n  );\n}","type":"text"}]},{"type":"paragraph","content":[{"text":"We created a state event and set it to zero. When we click the","type":"text"},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"next","type":"text","marks":[{"type":"bold"}]},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"button, we set the state to the sum of the remainder of the current state, one, and the song’s length, divided by the song’s length:","type":"text"}]},{"type":"code_block","attrs":{"class":null},"content":[{"text":"currentSong + 1 + songs.length) % songs.length","type":"text"}]},{"type":"paragraph","content":[{"text":"When we click the","type":"text"},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"previous","type":"text","marks":[{"type":"bold"}]},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"button, we set the state to the remainder of the current song, minus one, plus the song’s length divided by the song’s length:","type":"text"}]},{"type":"code_block","attrs":{"class":null},"content":[{"text":"currentSong - 1 + songs.length) % songs.length","type":"text"}]},{"type":"paragraph","content":[{"text":"We also created a state event that checks if the song is playing or not, and then we passed it as props to the","type":"text"},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"Player","type":"text","marks":[{"type":"code"}]},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"component. Finally, we handled the functionalities for changing the image, artists, and song title.","type":"text"}]},{"type":"paragraph","content":[{"text":"When we start the application, everything seems to work; the images change when clicking on the","type":"text"},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"Next","type":"text","marks":[{"type":"bold"}]},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"button. However, the songs playing don’t match the pictures and artist names displayed on the screen. Sometimes, two or more songs are playing simultaneously.","type":"text"}]},{"type":"paragraph"},{"type":"heading","attrs":{"level":2},"content":[{"text":"Problem solving: Mismatched song details","type":"text","marks":[{"type":"bold"}]}]},{"type":"paragraph","content":[{"text":"When we click on the","type":"text"},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"next","type":"text","marks":[{"type":"bold"}]},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"or","type":"text"},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"previous","type":"text","marks":[{"type":"bold"}]},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"buttons, we are recalculating values and effectively causing a re-render. To stop this, we wrap the song array and the created instance of the playlist in a","type":"text"},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"useMemo","type":"text","marks":[{"type":"code"}]},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"Hook, as seen below:","type":"text"}]},{"type":"code_block","attrs":{"class":null},"content":[{"text":"// App.js\n\nimport React, { useState, useMemo } from 'react';\nimport Player from './Player';\nimport { AudioPlaylist } from 'ts-audio';\n// Music import\n\n// Pictures import\n\nexport default function App() {\n  const [currentSong, setCurrentSong] = useState(0);\n\n  const songs = useMemo(\n    () => [\n      {\n        title: 'Eyes to the sky',\n        artist: 'Jon Bellion',\n        img_src: EyesImg,\n        src: Eyes,\n      },\n      {\n        title: 'Lazarus',\n        artist: 'Dave',\n        img_src: LazarusImg,\n        src: Lazarus,\n      },\n      {\n        title: 'Yosemite',\n        artist: 'Travis scott',\n        img_src: YosemiteImg,\n        src: Yosemite,\n      },\n      {\n        title: 'Bird set free',\n        artist: 'Sia',\n        img_src: SiaImg,\n        src: Sia,\n      },\n      {\n        title: 'Cant be broken',\n        artist: 'Lil wayne',\n        img_src: BrokenImg,\n        src: Broken,\n      },\n      {\n        title: 'Mood',\n        artist: '24kGoldn',\n        img_src: MoodImg,\n        src: Mood,\n      },\n      {\n        title: 'Nobody fine pass you',\n        artist: 'T-Classic',\n        img_src: NobodyImg,\n        src: Nobody,\n      },\n      {\n        title: 'Dark paradise',\n        artist: 'Lana Del Ray',\n        img_src: AudioImg,\n        src: Audio,\n      },\n    ],\n    []\n  );\n\n  const playlist = useMemo(() => {\n    return AudioPlaylist({\n      files: songs.map((song) => song.src),\n    });\n  }, [songs]);","type":"text"}]},{"type":"paragraph","content":[{"text":"The","type":"text"},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"useMemo","type":"text","marks":[{"type":"code"}]},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"Hook effectively caches the value so that it doesn’t need to be recalculated and therefore doesn’t cause a re-render.","type":"text"}]},{"type":"heading","attrs":{"level":2},"content":[{"text":"Adding styling","type":"text","marks":[{"type":"bold"}]}]},{"type":"paragraph","content":[{"text":"We’ll use icons from","type":"text"},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"Font Awesome Icons","type":"text","marks":[{"type":"link","attrs":{"href":"https://fontawesome.com/v5/docs/web/use-with/react","uuid":null,"anchor":null,"custom":{},"target":null,"linktype":null}}]},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"in this tutorial. You can install the Font Awesome package using the commands below:","type":"text"}]},{"type":"code_block","attrs":{"class":null},"content":[{"text":"yarn add @fortawesome/fontawesome-svg-core\nyarn add @fortawesome/free-solid-svg-icons\nyarn add @fortawesome/react-fontawesome","type":"text"}]},{"type":"paragraph","content":[{"text":"Copy and paste the code below into the","type":"text"},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"Player.js","type":"text","marks":[{"type":"code"}]},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"file:","type":"text"}]},{"type":"code_block","attrs":{"class":null},"content":[{"text":"// Player.js\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlay, faPause, faForward, faBackward } from '@fortawesome/free-solid-svg-icons';\nexport default function Player({ play, pause, next, prev, isPlaying, setIsPlaying }) {\n  return (\n    <div className=\"c-player--controls\">\n      <button className=\"skip-btn\" onClick={prev}>\n        <FontAwesomeIcon icon={faBackward} />\n      </button>\n      <button\n        className=\"play-btn\"\n        onClick={() => setIsPlaying(!isPlaying ? play : pause)}\n      >\n        <FontAwesomeIcon icon={isPlaying ? faPause : faPlay} />\n      </button>\n      <button className=\"skip-btn\" onClick={next}>\n        <FontAwesomeIcon icon={faForward} />\n      </button>\n    </div>\n  );\n}","type":"text"}]},{"type":"paragraph","content":[{"text":"In the code block above, we get the props from the","type":"text"},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"App.js","type":"text","marks":[{"type":"code"}]},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"file, then handle them inside the","type":"text"},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"Player.js","type":"text","marks":[{"type":"code"}]},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"file. For styling, copy and paste the code below into your","type":"text"},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"index.css","type":"text","marks":[{"type":"code"}]},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"file:","type":"text"}]},{"type":"code_block","attrs":{"class":null},"content":[{"text":"* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  font-family: 'Fira Sans', sans-serif;\n}\nbody {\n  background-color: #ddd;\n}\n.App {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-height: 100vh;\n  max-width: 100vw;\n}\n.c-player {\n  display: block;\n  background-color: #0a54aa;\n  max-width: 400px;\n  display: block;\n  margin: 0px auto;\n  padding: 50px;\n  border-radius: 16px;\n  box-shadow: inset -6px -6px 12px rgba(0, 0, 0, 0.8),\n    inset 6px 6px 12px rgba(255, 255, 255, 0.4);\n}\n.c-player > h4 {\n  color: #fff;\n  font-size: 14px;\n  text-transform: uppercase;\n  font-weight: 500;\n  text-align: center;\n}\n.c-player > p {\n  color: #aaa;\n  font-size: 14px;\n  text-align: center;\n  font-weight: 600;\n}\n.c-player > p span {\n  font-weight: 400;\n}\n.c-player--details .details-img {\n  position: relative;\n  width: fit-content;\n  margin: 0 auto;\n}\n.c-player--details .details-img img {\n  display: block;\n  margin: 50px auto;\n  width: 100%;\n  max-width: 250px;\n  border-radius: 50%;\n  box-shadow: 6px 6px 12px rgba(0, 0, 0, 0.8),\n    -6px -6px 12px rgba(255, 255, 255, 0.4);\n}\n.c-player--details .details-img:after {\n  content: '';\n  display: block;\n  position: absolute;\n  top: -25px;\n  left: -25px;\n  right: -25px;\n  bottom: -25px;\n  border-radius: 50%;\n  border: 3px dashed rgb(255, 0, 0);\n}\n.c-player--details .details-title {\n  color: #eee;\n  font-size: 28px;\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.8),\n    -2px -2px 4px rgba(255, 255, 255, 0.4);\n  text-align: center;\n  margin-bottom: 10px;\n}\n.c-player--details .details-artist {\n  color: #aaa;\n  font-size: 20px;\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.8),\n    -2px -2px 4px rgba(255, 255, 255, 0.4);\n  text-align: center;\n  margin-bottom: 20px;\n}\n.c-player--controls {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 30px;\n}\n.c-player--controls .play-btn {\n  display: flex;\n  margin: 0 30px;\n  padding: 20px;\n  border-radius: 50%;\n  box-shadow: 4px 4px 10px rgba(0, 0, 0, 0.8),\n    -4px -4px 10px rgba(255, 255, 255, 0.4),\n    inset -4px -4px 10px rgba(0, 0, 0, 0.4),\n    inset 4px 4px 10px rgba(255, 255, 255, 0.4);\n  border: none;\n  outline: none;\n  background-color: #ff0000;\n  color: #fff;\n  font-size: 24px;\n  cursor: pointer;\n}\n.c-player--controls .skip-btn {\n  background: none;\n  border: none;\n  outline: none;\n  cursor: pointer;\n  color: rgb(77, 148, 59);\n  font-size: 18px;\n}","type":"text"}]},{"type":"heading","attrs":{"level":2},"content":[{"text":"Conclusion","type":"text","marks":[{"type":"bold"}]}]},{"type":"paragraph","content":[{"text":"In this article, we’ve learned about ts-audio, an agnostic, easy-to-use library that works with the","type":"text"},{"text":"AudioContext","type":"text","marks":[{"type":"code"}]},{"text":" ","type":"text","marks":[{"type":"styled","attrs":{"class":""}}]},{"text":"API. We learned about ts-audio’s methods and how it makes it easier to work with audio files. Finally, we learned how to build a working music player using ts-audio.","type":"text"}]}]},"image":{"id":null,"alt":"Spotify x React","name":"","focus":null,"title":"React Audio Tutorial","source":"https://a.storyblok.com/f/192074/724x482/822c1cba31/screenshot-2023-01-26-at-00-27-55.png","filename":"https://a.storyblok.com/f/192074/724x482/822c1cba31/screenshot-2023-01-26-at-00-27-55.png","copyright":null,"fieldtype":"asset"},"intro":"Music players are devices or applications that allow you to listen to audio files and recordings. There are many music players available, but in this article, we’ll build a clone of the popular music streaming service, Spotify, using React and ts-audio.\n\nYou might expect that this tutorial would use the Spotify API, however, Spotify and other music databases do not provide a streamable link or URL in their response body. The Spotify API does provide a preview URL, but the duration of the songs is limited to only 30 seconds, and that isn’t enough for our example. Therefore, we won’t be using the Spotify API or making any requests to any music API or databases.","title":"Build a Spotify clone with React and ts-audio","component":"Article","published_at":"2023-02-01 22:18"},"slug":"build-a-spotify-clone-with-react-and-ts-audio","full_slug":"blog/build-a-spotify-clone-with-react-and-ts-audio","sort_by_date":null,"position":-30,"tag_list":[],"is_startpage":false,"parent_id":255655499,"meta_data":null,"group_id":"8b62465b-2daa-42e0-ba74-510a9214f61d","first_published_at":"2023-02-01T21:19:00.975Z","release_id":null,"lang":"default","path":null,"alternates":[],"default_full_slug":null,"translated_slugs":null}